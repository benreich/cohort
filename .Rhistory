x <- rnorm(100)
hist(x)
x <- rnorm(100)
hist(x)
x <- rnorm(100)
hist(x)
x <- rnorm(100)
hist(x)
x <- rnorm(100)
hist(x)
x <- rnorm(100)
hist(x)
x <- rnorm(100)
hist(x)
x <- rnorm(100)
y <- x + rnorm(100)
par(las = 1)
plot(x, y)
x <- rnorm(100)
y <- x + rnorm(100)
par(las = 2)
plot(x, y)
x <- rnorm(100)
y <- x + rnorm(100)
par(las = 1)
plot(x, y)
par(las=2)
plaot(x,y)
plot(x,y)
par(las=1)
plot(x,y)
x <- rnorm(100)
y <- x + rnorm(100)
plot(x, y)
x1 <- rnorm(10)
y1 <- rnorm(10)
points(x1, y1, col = "red")
x1 <- rnorm(10)
y1 <- rnorm(10)
lines(x1, y1, col = "green")
plot(0,0)
x1 <- rnorm(10)
y1 <- rnorm(10)
lines(x1, y1, col = "green")
pdf(file = "testRplot.pdf")
x <- rnorm(100)
hist(x)
dev.off()
getwd()
pdf(file = "testRplot.pdf")
x <- rnorm(100)
hist(x)
dev.off()
library(lattice)
library(nlme)
xyplot(distance ~ age | Subject, data = Orthodont)
xyplot(distance ~ age | Subject, data = Orthodont, type = "b")
library(ggplot2)
summary(mpg)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
weight
Diet
Bodyweight
nlme
nlme$Bodyweight
library(nlme)
Bodyweight
xyplot(weight ~ Time | Diet, BodyWeight)
ltext("ddd")
xyplot(weight ~ Time | Diet, BodyWeight)
tr =xyplot(weight ~ Time | Diet, BodyWeight)
tr
tr
summary(tr)
ltext(tr,"ddd")
plot(0, 0, main = expression(theta))
plot(0, 0, main = expression("theta"))
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
data(Bodyweight)
xyplot(weight ~ Time | Diet, BodyWeight)
data(Environmental)
Bodyweight
data(environmental)
data(bodyweight)
data(Bodyweight)
gray(0.5)
pal <- colorRamp(c("red", "blue"))
pal(0.3)
?seq
library(RColorBrewer)
set2
RcolorBrewer.set2
cols <- brewer.pal(3, "BuGn")
pal <- colorRampPalette(cols)!
!
pal <- colorRampPalette(cols)
pal <- colorRampPalette(cols)
image(volcano, col = pal(20)
)
image(volcano,volcano, col = pal(20))
volcano
plot(present$year, present$boys + present$girls, type = "l")
source("http://www.openintro.org/stat/data/present.R")
plot(present$year, present$boys + present$girls, type = "l")
plot(present$year, present$boys/(present$boys + present$girls), type = "l")
present$boys > present$girls
present$girls
plot(present$year, present$girls, type = "l")
plot(present$year, present$boys + present$girls, type = "l")
which.max(present$boys + present$girls)
plot(present$year, present$boys/(present$boys + present$girls), type = "l")
plot(present$year, present$boys/present$girls, type = "l")
which.max(present$boys - present$girls)
source("http://www.openintro.org/stat/data/cdc.R")
names(cdc)
View(cdc)
View(cdc)
summary(cdc$weight)
table(cdc$smoke100)
table(cdc$smoke100)/20000
barplot(table(cdc$smoke100))
table(cdc$gender)/20000
table(cdc$gender)
table(cdc$genhlth)/20000
table(cdc$genhlth)/20000*100
gender_smokers = table(cdc$gender, cdc$smoke100)
gender_smokers
mosaicplot(gender_smokers)
1:10
under23 and smoke = subset(cdc, cdc$smoke100 == 1 | cdc$age < 23)
under23_and_smoke = subset(cdc, cdc$smoke100 == 1 | cdc$age < 23)
boxplot(cdc$height)
summary(cdc$height)
boxplot(cdc$height ~ cdc$gender)
bmi = (cdc$weight/cdc$height^2) * 703
boxplot(bmi ~ cdc$genhlth)
bmi = (cdc$weight/cdc$height^2) * 703
boxplot(bmi ~ cdc$smoke100)
bmi = (cdc$weight/cdc$height^2) * 703
boxplot(bmi ~ cdc$gender)
bmi = (cdc$weight/cdc$height^2) * 703
boxplot(bmi ~ cdc$age)
bmi = (cdc$weight/cdc$height^2) * 703
boxplot(bmi ~ cdc$hlthplan)
bmi = (cdc$weight/cdc$height^2) * 703
boxplot(bmi ~ cdc$exerany)
bmi = (cdc$weight/cdc$height^2) * 703
boxplot(bmi ~ cdc$gender)
hist(cdc$age)
hist(bmi)
hist(bmi, breaks = 50)
plot(weight,bmi)
plot(cdc$weight,bmi)
under23_and_smoke = subset(cdc, cdc$smoke100 == 1 | cdc$age < 23)
under23_and_smoke = subset(cdc, cdc$smoke100 == 0 | cdc$age < 23)
under23_and_smoke = subset(cdc, cdc$smoke100 == 1 | cdc$age < 23)
under23_and_smoke = subset(cdc, cdc$smoke100 == 1 | cdc$age <= 23)
under23_and_smoke = subset(cdc, cdc$smoke100 == 1 | cdc$age < 23)\
under23_and_smoke = subset(cdc, cdc$smoke100 == 1 | cdc$age < 23)
under23_and_smoke = subset(cdc, cdc$smoke100 == 1 & cdc$age < 23)
source('~/cohort/cohort_analysis1.R')
source('~/cohort/cohort_analysis.r')
source('~/cohort/cohort_analysis.r')
con = gzcon(file('sit.gz', 'rb'))
source(con)
close(con)
source('~/cohort/cohort_analysis.r')
### IMPORT LIBRARIES ###
setwd("cohort")
library("scales")
library("plyr")
library("ggplot2")
library("lubridate")
source('~/cohort/cohort_build.R')
### IMPORT DATA ###
account_data <- cohort_build()
account_data $date = as.Date(account_data$date)
### Load Systematic Investor Toolkit
con = gzcon(file('sit.gz', 'rb'))
source(con)
close(con)
plota.test()
source('~/cohort/cohort_analysis.r')
df <- read.csv(cohort-activity)
df <- read.csv("cohort-activity")
get(wd)
getwd())
getwd()
listwd()
df <- read.csv("cohort_activity")
df <- read.csv("cohort_activity.csv")
View(df)
df <- read.csv("cohort_activity.csv")
View(df)
df <- read.csv("cohort_activity.csv")
View(df)
cohort_p as.numeric(df$active_m0/df$signed_up), as.numeric(df$active_m1/df$signed_up), as.numeric(df$active_m2/df$signed_up),
as.numeric(df$active_m3/df$signed_up), as.numeric(df$active_m4/df$signed_up), as.numeric(df$active_m5/df$signed_up),
as.numeric(df$active_m6/df$signed_up), as.numeric(df$active_m7/df$signed_up), as.numeric(df$active_m8/df$signed_up) ))
cohort_p <- as.numeric(df$active_m0/df$signed_up), as.numeric(df$active_m1/df$signed_up), as.numeric(df$active_m2/df$signed_up),
as.numeric(df$active_m3/df$signed_up), as.numeric(df$active_m4/df$signed_up), as.numeric(df$active_m5/df$signed_up),
as.numeric(df$active_m6/df$signed_up), as.numeric(df$active_m7/df$signed_up), as.numeric(df$active_m8/df$signed_up) ))
df
baseball[1:100,]
ddply(baseball[1:100,], ~ year, nrow)
ddply(baseball[1:100,],, nrow)
dat <- data.frame(c1 = c("abc","dxf","ghi"), c2 = 2:4, w = c(1,0.5,1.5))
with(dat, c2 * w)
dat2 <- data.frame(c1 = c("abc","dxf","ghi"), c2 = 2:4, w = c(1,0.5,1.5),
c3 = 5:7, c4 = 3:5)
dat2
want <- sapply(dat2, is.numeric) & names(dat2) != "w"
want
class(want)
is.numeric(dat2)
is.numeric(dat2[,1])
is.numeric(dat2[,2])
is.numeric(dat2[2,])
is.numeric(dat2[2,])
?
with
View(df)
sapply(df,is.numeric)
a<- sapply(df,is.numeric)
a
names(a)
a<- sapply(df,is.numeric)
a<- sapply(df,is.numeric) & names(df) !="signed_up"
a
a<- sapply(df,is.numeric) & names(df) !="signed_up"
col_selector <- sapply(df,is.numeric) & names(df)!="signed_up"
col_selector
library("openintro")
data(marioKart)
class(mariokart)
class(marioKart)
View(marioKart)
View(marioKart)
View(marioKart)
View(marioKart)
mk0 <- marioKart[marioKart$totalPr < 100,]
with(mk0, {
+            boxplot(totalPr ~ wheels)
+            points(wheels+1.1, totalPr, col=4)
+           })
with(mk0, {boxplot(totalPr ~ wheels)
+            points(wheels+1.1, totalPr, col=4)
+           })
with(mk0, {boxplot(totalPr ~ wheels)
points(wheels+1.1, totalPr, col=4})
df[a]
df1 <- within(df,df[a]<-df[a]/signed_up)
View(df1)
View(df1)
df[, a] <- with(df, df[, a]/signed_up)
View(df)
View(df)
df <- read.csv("cohort_activity.csv")
col_selector <- sapply(df,is.numeric) & names(df)!="signed_up"
df[,col_selector] <- with(df, df[,col_selector]/signed_up)
View(df)
View(df)
### IMPORT LIBRARIES ###
setwd("cohort")
library("scales")
library("plyr")
library("ggplot2")
library("lubridate")
source('~/cohort/cohort_build.R')
### IMPORT DATA ###
account_data <- cohort_build()
account_data $date = as.Date(account_data$date)
### Load Systematic Investor Toolkit
con = gzcon(file('sit.gz', 'rb'))
source(con)
close(con)
df <- read.csv("cohort_activity.csv")
col_selector <- sapply(df,is.numeric) & names(df)!="signed_up"
df[,col_selector] <- with(df, df[,col_selector]/signed_up)
View(df)
View(df)
View(df)
View(df)
temp = as.matrix(df[,3:(length(df[1,])
)
temp = as.matrix(df[,3:(length(df[1,]))
temp = as.matrix(df[,3:(length(df[1,])
)
)
temp = as.matrix(df[,3:(length(df[1,])))
temp = as.matrix(df[,3:(length(df[1,])))
length(df[1,])
temp = as.matrix(df[,3:(length(df[1,])-1)])
temp
colnames(temp) = paste('Month', 0:(length(temp[1,])-1), sep=' ')
rownames(temp) = as.vector(df$V1)
as.vector(df$V1)
temp
as.vector(df$cohort)
colnames(temp) = paste('Month', 0:(length(temp[1,])-1), sep=' ')
rownames(temp) = as.vector(df$cohort)
temp
temp[] = plota.format(100 * as.numeric(temp), 0, '', '%')
temp
temp[temp == " 0%"]
plot.table(temp, smain='Cohort(users)', highlight = TRUE, colorbar = TRUE)
source('~/cohort/cohort_analysis.r')
?plota
?plota.format
source('~/cohort/cohort_analysis.r')
plot.table(temp, smain='Cohort(users)', text.cex = 1.5, highlight = TRUE, colorbar = TRUE)
plot.table(temp, smain='Cohort(users)', text.cex = 2, highlight = TRUE, colorbar = TRUE)
plot.table(temp, smain='Cohort(users)', text.cex = 4, highlight = TRUE, colorbar = TRUE)
plot.table(temp, smain='Cohort(users)', text.cex = 20, highlight = TRUE, colorbar = TRUE)
plot.table(temp, smain='Cohort(users)', text.cex = 1000, highlight = TRUE, colorbar = TRUE)
plot.table(temp, smain='Cohort(users)', text.cex = 1000, highlight = TRUE, colorbar = TRUE)
plot.table(temp, smain='Cohort(users)', cex = 2, highlight = TRUE, colorbar = TRUE)
source('~/cohort/cohort_analysis.r')
plot.table(temp, smain='Cohort(users)', text.cex = 2, highlight = TRUE, colorbar = TRUE)
plot.table(temp, smain='Cohort(users)', highlight = TRUE, colorbar = TRUE)
plot.table(temp, smain='Cohort(users)', text.cex = 4, highlight = TRUE, colorbar = TRUE)
plot.table(temp, smain='Cohort(users)', text.cex = 1, highlight = TRUE, colorbar = TRUE)
plot.table(temp, smain='Cohort(users)', text.cex = 1, highlight = TRUE, colorbar = TRUE)
plot.table(temp, smain='Cohort(users)', text.cex = 2, highlight = TRUE, colorbar = TRUE)
plot.table(temp, smain='Cohort(users)', highlight = TRUE, colorbar = TRUE)
plot.table(temp, smain='Cohort(users)', text.cex = 0.5, highlight = TRUE, colorbar = TRUE)
library("plotrix")
install.packages("plotrix")
library("plotrix", lib.loc="C:/Program Files/R/R-3.0.2/library")
testdf<-data.frame(Before=c(10,7,5),During=c(8,6,2),After=c(5,3,4))
rownames(testdf)<-c("Red","Green","Blue")
barp(testdf,main="Test addtable2plot",ylab="Value",
names.arg=colnames(testdf),col=2:4)
# show most of the options
addtable2plot(2,8,testdf,bty="o",display.rownames=TRUE,hlines=TRUE,
title="The table")
plot.new()
grid.table(temo,
# change font sizes:
gpar.coltext = gpar(cex = 1.2),
gpar.rowtext = gpar(cex = 1.2))
library(gridExtra)
install.packages("gridExtra")
library("gridExtra", lib.loc="C:/Program Files/R/R-3.0.2/library")
plot.new()
grid.table(temo,
# change font sizes:
gpar.coltext = gpar(cex = 1.2),
gpar.rowtext = gpar(cex = 1.2))
plot.new()
grid.table(temp,
# change font sizes:
gpar.coltext = gpar(cex = 1.2),
gpar.rowtext = gpar(cex = 1.2))
plot.new()
grid.table(temp,
# change font sizes:
gpar.coltext = gpar(cex = 1.0),
gpar.rowtext = gpar(cex = 1.0))
grid.table(mtcars[1:10, ],
gpar.coretext = gpar(fontsize = 10),
gpar.corefill = gpar(fill = "lightblue", alpha=0.5, col = NA),
h.even.alpha = 0.5
)
plot.new()
grid.table(mtcars[1:10, ],
gpar.coretext = gpar(fontsize = 10),
gpar.corefill = gpar(fill = "lightblue", alpha=0.5, col = NA),
h.even.alpha = 0.5
)
grid.table(temp,
gpar.coretext = gpar(fontsize = 10),
gpar.corefill = gpar(fill = "lightblue", alpha=0.5, col = NA),
h.even.alpha = 0.5
)
plot.new()
grid.table(temp,
gpar.coretext = gpar(fontsize = 10),
gpar.corefill = gpar(fill = "lightblue", alpha=0.5, col = NA),
h.even.alpha = 0.5
)
library(reshape2, ggplot2)
dat <- matrix(rnorm(100, 3, 1), ncol=10)
dat
names(dat) <- paste("X", 1:10)
dat
dat
dat2 <- melt(dat, id.var = "X1")
dat2
p1 <- ggplot(dat2, aes(as.factor(Var1), Var2, group=Var2)) +
geom_tile(aes(fill = value)) +
scale_fill_gradient(low = "white", high = "red")
p1
labs <- c(apply(round(dat[, -2], 1), 2, as.character))
labs
p1 +  geom_text(aes(label=labs), size=1)
p1 <- ggplot(dat2, aes(as.factor(Var1), Var2, group=Var2)) +
geom_tile(aes(fill = value)) +
scale_fill_gradient(low = "white", high = "red")
p1
ggplot(dat2, aes(as.factor(Var1), Var2, group=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(fill = dat2$value, label = round(dat2$value, 1))) +
scale_fill_gradient(low = "white", high = "red")
dat2 <- melt(temp, id.var = "X1")
p1 <- ggplot(dat2, aes(as.factor(Var1), Var2, group=Var2)) +
geom_tile(aes(fill = value)) +
scale_fill_gradient(low = "white", high = "red")
ggplot(dat2, aes(as.factor(Var1), Var2, group=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(fill = dat2$value, label = round(dat2$value, 1))) +
scale_fill_gradient(low = "white", high = "red")
ggplot(dat2, aes(as.factor(Var1), Var2, group=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(fill = dat2$value, label = dat2$value)) +
scale_fill_gradient(low = "white", high = "red")
class dat2
dat2
df <- read.csv("cohort_activity.csv")
col_selector <- sapply(df,is.numeric) & names(df)!="signed_up"
df[,col_selector] <- with(df, df[,col_selector]/signed_up)
colnames(temp) = paste('Month', 0:(length(temp[1,])-1), sep=' ')
rownames(temp) = as.vector(df$cohort)
df <- read.csv("cohort_activity.csv")
col_selector <- sapply(df,is.numeric) & names(df)!="signed_up"
df[,col_selector] <- with(df, df[,col_selector]/signed_up)
colnames(temp) = paste('Month', 0:(length(temp[1,])-1), sep=' ')
rownames(temp) = as.vector(df$cohort)
temp
temp
df <- read.csv("cohort_activity.csv")
col_selector <- sapply(df,is.numeric) & names(df)!="signed_up"
df[,col_selector] <- with(df, df[,col_selector]/signed_up)
temp
colnames(temp) = paste('Month', 0:(length(temp[1,])-1), sep=' ')
rownames(temp) = as.vector(df$cohort)
source('~/cohort/cohort_analysis.r')
df <- read.csv("cohort_activity.csv")
col_selector <- sapply(df,is.numeric) & names(df)!="signed_up"
df[,col_selector] <- with(df, df[,col_selector]/signed_up)
temp = as.matrix(df[,3:(length(df[1,])-1)])
colnames(temp) = paste('Month', 0:(length(temp[1,])-1), sep=' ')
rownames(temp) = as.vector(df$cohort)
temp
dat2 <- melt(dat, id.var = "X1")
dat2 <- melt(temp, id.var = "X1")
dat2
df <- read.csv("cohort_activity.csv")
col_selector <- sapply(df,is.numeric) & names(df)!="signed_up"
df[,col_selector] <- with(df, df[,col_selector]/signed_up)
temp = as.matrix(df[,3:(length(df[1,])-1)])
colnames(temp) = paste('Month', 0:(length(temp[1,])), sep=' ')
rownames(temp) = as.vector(df$cohort)
source('~/cohort/cohort_analysis.r')
source('~/cohort/cohort_analysis.r')
source('~/cohort/cohort_analysis.r')
df
df <- read.csv("cohort_activity.csv")
col_selector <- sapply(df,is.numeric) & names(df)!="signed_up"
df[,col_selector] <- with(df, df[,col_selector]/signed_up)
temp = as.matrix(df[,3:(length(df[1,])-1)])
colnames(temp) = paste('Month', 0:(length(temp[1,])), sep=' ')
rownames(temp) = as.vector(df$cohort)
source('~/cohort/cohort_analysis.r')
dat2
df <- read.csv("cohort_activity.csv")
col_selector <- sapply(df,is.numeric) & names(df)!="signed_up"
df[,col_selector] <- with(df, df[,col_selector]/signed_up)
temp = as.matrix(df[,3:(length(df[1,])-1)])
colnames(temp) = paste('Month', 0:(length(temp[1,])), sep=' ')
rownames(temp) = as.vector(df$cohort)
dat2 <- melt(temp, id.vars = "X1")
dat2
temp
melt(temp)
melt(temp)
View(df)
View(dat2)
col_selector
temp
View(dat2)
ggplot(dat2, aes(as.factor(Var1), Var2, group=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(fill = dat2$value, label = round(dat2$value, 1))) +
scale_fill_gradient(low = "white", high = "red")
ggplot(dat2, aes(as.factor(Var1), Var2, group=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(fill = dat2$value, label = round(dat2$value, 3))) +
scale_fill_gradient(low = "white", high = "red")
ggplot(dat2, aes(as.factor(Var1), Var2, group=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(fill = dat2$value, label = round(dat2$value, 3))) +
scale_fill_gradie
dat2 <- melt(temp, id.vars = "X2")
View(dat2)
dat2 <- melt(temp, id.vars = "Var2")
View(dat2)
dat2 <- melt(t(temp))
View(dat2)
ggplot(dat2, aes(as.factor(Var1), Var2, group=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(fill = dat2$value, label = round(dat2$value, 3))) +
scale_fill_gradient(low = "white", high = "red")
